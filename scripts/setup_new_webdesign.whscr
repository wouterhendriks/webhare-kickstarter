<?wh
LOADLIB "wh::filetypes/csv.whlib";
LOADLIB "wh::internet/urls.whlib";
LOADLIB "wh::os.whlib";
LOADLIB "wh::files.whlib";
LOADLIB "module::publisher/internal/siteprofiles/compiler.whlib";
LOADLIB "module::publisher/internal/siteprofiles/reader.whlib";
LOADLIB "module::publisher/siteapi.whlib";
LOADLIB "module::system/database.whlib";
LOADLIB "module::system/whfs.whlib";
LOADLIB "module::system/internal/resources.whlib";
LOADLIB "mod::system/lib/internal/modules/support.whlib";


OBJECT trans := OpenPrimary();
trans->BeginWork();

RECORD args := ParseArguments(GetConsoleArguments(),
                              [[ name := "title", type := "param" ]
                              ,[ name := "name", type := "param" ]
                              ,[ name := "templatetag", type := "param" ]
                              ,[ name := "projectdir", type := "param" ]
                              ]);

IF (args.title = "" OR args.name = "" OR args.templatetag = "" OR args.projectdir = "")
  Abort('Usage: runscript setup_new_webdesign.whscr "Title" "Name" "Template tag" "Project directory');

IF (Right(args.projectdir, 1) != "/")
  args.projectdir := args.projectdir || "/";

// get URL
Print("\nPlease enter domain name (example.com): ");

STRING domain_name;
WHILE (domain_name = "")
{
  STRING get_domain_name := ReadLineFrom(0, 1000, TRUE);

  IF (get_domain_name = "")
  {
    Print("\nDomain name is required. Try again: ");
    CONTINUE;
  }

  domain_name := get_domain_name;

  BREAK;
}

Print("Using domain name: '" || domain_name || "'\n\n");

STRING template := args.templatetag;
STRING module := args.name;
STRING title := args.title;
STRING name := args.name;

// setup webdesign
RECORD setup := SetupWebDesign(template, module, name
                              ,[ title := title
                               , defaultlanguage := "nl"
                               , domainname := domain_name
                               ]);

// create new site
OBJECT newfolder := OpenWHFSRootObject()->CreateFolder([ name := args.title ]);
OBJECT newsite := CreateSiteFromFolder(newfolder->id);

// update site settings with site design
OBJECT sitesettingstype := OpenWHFSType("http://www.webhare.net/xmlns/publisher/sitesettings");
RECORD sitesettings := sitesettingstype->GetInstanceData(newsite->root);
sitesettingstype->SetInstanceData(newsite->id, [ sitedesign := module || ":" || name ]);

// find localhost:8001 webserver and assign this site
INTEGER defaultoutputserverid := SELECT AS INTEGER id
                                   FROM system.webservers
                                  WHERE ToUpperCase(baseurl) = 'HTTP://LOCALHOST:8001/';

IF (defaultoutputserverid > 0)
  newsite->SetPrimaryOutput(defaultoutputserverid, "/" || GetSafeFileName(name) || "/");

// update home siteprl URL
//STRING home_siteprl_path := args.projectdir || "webdesigns/" || name || "/pages/home/home.siteprl.xml";
//INTEGER infile := OpenDiskFile(home_siteprl_path, FALSE);

//STRING home_siteprl := ReadFromFile(infile, 1024*1024);

//CloseDiskFile(infile);

//home_siteprl := Substitute(home_siteprl, "www.example.com", domain_name);

//IF (NOT CreateDiskFileFromBlob(home_siteprl_path, FALSE, TRUE, StringToBlob(home_siteprl)))
//  THROW NEW Exception("I/O error updating home site profile");

// recompile site profiles
RecompileSiteProfiles(); //FIXME: doesn't seem to work, homepagetype is not available

// create an index home page
OBJECT homepagetype := OpenWHFSType('http://' || domain_name || "/filetype/home");
OBJECT homepage := newsite->rootobject->CreateFile([ name := "index.html"
                                                   , title := "Homepage"
                                                   , type := ObjectExists(homepagetype) ? homepagetype->id : 5
                                                   , publish := TRUE
                                                   ]);

newsite->rootobject->UpdateMetaData([ indexdoc := homepage->id ]);

RECORD ARRAY errors := trans->CommitWork();

IF (Length(errors) > 0)
  Abort("Errors in setup_new_webdesign.whscr: " || AnyToString(errors,'tree'));

Print("\n## ----------------------- Result ----------------------- ##\n\n"
   || "Title:\n" || title || "\n"
   || "\n"
   || "Module name (converted from title):\n" || name || "\n"
   || "\n"
   || "Assuming a default install, direct URL to the site in the Publisher:\n"
   || "http://localhost:8000/?app=publisher(" || newsite->name || ")\n"
   || "\n"
   || "Output URL:\n"
   || newsite->webroot || "\n"
   || "\n"
   || "You can go to the created module using the following command:\n"
   || "whcd " || name || "\n"
   || "\n"
   || "Or to the newly created webdesign folder:\n"
   || "whcd " || name || "/webdesigns/" || name || "\n");
